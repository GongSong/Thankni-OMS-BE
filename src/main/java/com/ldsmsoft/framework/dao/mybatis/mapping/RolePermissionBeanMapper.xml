<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ldsmsoft.framework.dao.mybatis.dao.RolePermissionBeanMapper" >
  <resultMap id="BaseResultMap" type="com.ldsmsoft.framework.dao.mybatis.model.RolePermissionBean" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="fk_role_id" property="fkRoleId" jdbcType="BIGINT" />
    <result column="fk_permission_id" property="fkPermissionId" jdbcType="BIGINT" />
    <result column="fk_create_user_id" property="fkCreateUserId" jdbcType="BIGINT" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="status" property="status" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, fk_role_id, fk_permission_id, fk_create_user_id, create_time, status
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from role_permission
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from role_permission
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.ldsmsoft.framework.dao.mybatis.model.RolePermissionBean" >
    insert into role_permission (id, fk_role_id, fk_permission_id, 
      fk_create_user_id, create_time, status
      )
    values (#{id,jdbcType=BIGINT}, #{fkRoleId,jdbcType=BIGINT}, #{fkPermissionId,jdbcType=BIGINT}, 
      #{fkCreateUserId,jdbcType=BIGINT}, #{createTime,jdbcType=TIMESTAMP}, #{status,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.ldsmsoft.framework.dao.mybatis.model.RolePermissionBean" >
    insert into role_permission
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="fkRoleId != null" >
        fk_role_id,
      </if>
      <if test="fkPermissionId != null" >
        fk_permission_id,
      </if>
      <if test="fkCreateUserId != null" >
        fk_create_user_id,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="status != null" >
        status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="fkRoleId != null" >
        #{fkRoleId,jdbcType=BIGINT},
      </if>
      <if test="fkPermissionId != null" >
        #{fkPermissionId,jdbcType=BIGINT},
      </if>
      <if test="fkCreateUserId != null" >
        #{fkCreateUserId,jdbcType=BIGINT},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.ldsmsoft.framework.dao.mybatis.model.RolePermissionBean" >
    update role_permission
    <set >
      <if test="fkRoleId != null" >
        fk_role_id = #{fkRoleId,jdbcType=BIGINT},
      </if>
      <if test="fkPermissionId != null" >
        fk_permission_id = #{fkPermissionId,jdbcType=BIGINT},
      </if>
      <if test="fkCreateUserId != null" >
        fk_create_user_id = #{fkCreateUserId,jdbcType=BIGINT},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ldsmsoft.framework.dao.mybatis.model.RolePermissionBean" >
    update role_permission
    set fk_role_id = #{fkRoleId,jdbcType=BIGINT},
      fk_permission_id = #{fkPermissionId,jdbcType=BIGINT},
      fk_create_user_id = #{fkCreateUserId,jdbcType=BIGINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      status = #{status,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>